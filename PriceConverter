// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol";

library PriceConverter {
    function getPrice() internal view returns(uint256) {
        //abi: 
        //address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e
        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);
        (,int256 price,,,) = priceFeed.latestRoundData();
        //eth in usd
        //1000.00000000
        return uint256(price * 1e10);
    }
    function getVersion() internal view returns (uint256) { 
        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x326C977E6efc84E512bB9C30f76E30c160eD06FB);
        return priceFeed.version();
    }
    function getConversionRate(uint256 ethAmount) internal view returns (uint256) {
            uint256 ethPrice = getPrice();
            uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;
            return ethAmountInUsd;

    }
}
